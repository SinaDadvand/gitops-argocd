# Main monitoring application with sync waves
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-app
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: monitoring-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: monitoring-app
  template:
    metadata:
      labels:
        app: monitoring-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: app
        image: nginx:1.24-alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: ENVIRONMENT
          value: "monitoring"
        volumeMounts:
        - name: config
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
        - name: config
          mountPath: /usr/share/nginx/html/health
          subPath: health
        - name: config
          mountPath: /usr/share/nginx/html/ready  
          subPath: ready
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
        - name: config
          configMap:
            name: monitoring-config
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  selector:
    app: monitoring-app
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30120
    name: http           # ✅ Add required name field
  - port: 9090
    targetPort: 9090
    name: metrics        # ✅ Already has name
  type: NodePort