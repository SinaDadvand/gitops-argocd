apiVersion: v1
kind: ConfigMap
metadata:
  name: production-app-config
  namespace: production-app
  labels:
    app: production-app
data:
  app.js: |
    const express = require('express');
    const app = express();
    const port = 3000;

    // API endpoint to get environment variables (for demo purposes)
    app.get('/api/env', (req, res) => {
        // In production, you'd never expose secrets like this!
        // This is purely for demo/learning purposes
        const envData = {
            database: {
                host: process.env.DB_HOST || 'not-set',
                port: process.env.DB_PORT || 'not-set',
                name: process.env.DB_NAME || 'not-set',
                username: process.env.DB_USERNAME || 'not-set',
                password: process.env.DB_PASSWORD ? '***HIDDEN***' : 'not-set',
                hasPassword: !!process.env.DB_PASSWORD
            },
            api_keys: {
                stripe: process.env.STRIPE_API_KEY || 'not-set',
                github: process.env.GITHUB_TOKEN || 'not-set',
                sendgrid: process.env.SENDGRID_API_KEY || 'not-set',
                jwt: process.env.JWT_SECRET || 'not-set'
            },
            app: {
                env: process.env.APP_ENV || 'not-set',
                version: process.env.APP_VERSION || 'not-set'
            }
        };
        res.json(envData);
    });

    // Health check endpoint
    app.get('/health', (req, res) => {
        res.send('OK');
    });

    // Ready check endpoint
    app.get('/ready', (req, res) => {
        res.send('READY');
    });

    // Metrics endpoint (mock)
    app.get('/metrics', (req, res) => {
        res.send('# HELP sealed_secrets_demo_up Demo application status\\nsealed_secrets_demo_up 1');
    });

    // Main page with real environment variable display
    app.get('/', (req, res) => {
        const htmlContent = `<!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Production App - Sealed Secrets Demo</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
                color: white;
                min-height: 100vh;
            }
            .container {
                max-width: 1200px;
                margin: 0 auto;
                background: rgba(255, 255, 255, 0.1);
                padding: 40px;
                border-radius: 15px;
                backdrop-filter: blur(10px);
                box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
            }
            .header {
                text-align: center;
                margin-bottom: 40px;
            }
            .header h1 {
                font-size: 3em;
                margin-bottom: 10px;
                background: linear-gradient(45deg, #fff, #f0f0f0);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
            }
            .security-badge {
                display: inline-block;
                padding: 10px 20px;
                background: #27ae60;
                border-radius: 25px;
                font-weight: bold;
                margin: 10px 5px;
            }
            .info-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
                gap: 20px;
                margin-top: 30px;
            }
            .info-card {
                background: rgba(0, 0, 0, 0.3);
                padding: 25px;
                border-radius: 15px;
                border: 1px solid rgba(255, 255, 255, 0.2);
            }
            .info-card h3 {
                color: #3498db;
                margin-bottom: 15px;
                font-size: 1.3em;
            }
            .secret-item {
                margin: 10px 0;
                padding: 10px;
                background: rgba(0, 0, 0, 0.2);
                border-radius: 8px;
                border-left: 4px solid #27ae60;
            }
            .secret-value {
                font-family: 'Courier New', monospace;
                background: #2c3e50;
                padding: 3px 8px;
                border-radius: 4px;
                color: #ecf0f1;
                word-break: break-all;
            }
            .secret-loaded {
                background: #27ae60;
                color: white;
            }
            .secret-missing {
                background: #e74c3c;
                color: white;
            }
            .status-indicator {
                display: inline-block;
                width: 12px;
                height: 12px;
                border-radius: 50%;
                margin-right: 8px;
            }
            .status-ok { background: #2ecc71; }
            .status-warning { background: #f39c12; }
            .status-error { background: #e74c3c; }
            .endpoints {
                margin-top: 30px;
                text-align: center;
            }
            .endpoints a {
                color: #3498db;
                text-decoration: none;
                margin: 0 15px;
                padding: 8px 16px;
                border: 1px solid #3498db;
                border-radius: 20px;
                transition: all 0.3s;
            }
            .endpoints a:hover {
                background: #3498db;
                color: white;
            }
            .demo-warning {
                background: rgba(231, 76, 60, 0.1);
                border: 1px solid #e74c3c;
                padding: 15px;
                border-radius: 8px;
                margin-top: 15px;
            }
            .demo-warning h4 {
                color: #e74c3c;
                margin-top: 0;
            }
        </style>
        <script>
            async function loadEnvironmentData() {
                try {
                    const response = await fetch('/api/env');
                    const data = await response.json();
                    updateUI(data);
                } catch (error) {
                    console.error('Failed to load environment data:', error);
                    showError();
                }
            }

            function updateUI(data) {
                document.getElementById('timestamp').textContent = new Date().toLocaleString();
                
                const secretsStatus = document.getElementById('secrets-status');
                const hasSecrets = data.database.hasPassword && data.api_keys.stripe !== 'not-set';
                secretsStatus.innerHTML = hasSecrets 
                    ? '<span class="status-indicator status-ok"></span>All secrets decrypted successfully'
                    : '<span class="status-indicator status-error"></span>Some secrets missing';

                document.getElementById('db-host').textContent = data.database.host;
                document.getElementById('db-port').textContent = data.database.port;
                document.getElementById('db-name').textContent = data.database.name;
                document.getElementById('db-username').textContent = data.database.username;
                document.getElementById('db-password').textContent = data.database.hasPassword ? '***LOADED***' : 'NOT SET';
                
                const dbStatus = document.getElementById('db-status');
                const dbComplete = data.database.host !== 'not-set' && data.database.hasPassword;
                dbStatus.innerHTML = dbComplete
                    ? '<span class="status-indicator status-ok"></span>Database credentials loaded'
                    : '<span class="status-indicator status-error"></span>Database credentials missing';

                document.getElementById('stripe-key').textContent = data.api_keys.stripe;
                document.getElementById('github-token').textContent = data.api_keys.github;
                document.getElementById('sendgrid-key').textContent = data.api_keys.sendgrid;
                document.getElementById('jwt-secret').textContent = data.api_keys.jwt;
                
                const apiStatus = document.getElementById('api-status');
                const apiComplete = data.api_keys.stripe !== 'not-set' && data.api_keys.github !== 'not-set';
                apiStatus.innerHTML = apiComplete
                    ? '<span class="status-indicator status-ok"></span>API keys loaded successfully'
                    : '<span class="status-indicator status-error"></span>Some API keys missing';

                document.querySelectorAll('.secret-value').forEach(el => {
                    if (el.textContent === 'not-set') {
                        el.className = 'secret-value secret-missing';
                    } else {
                        el.className = 'secret-value secret-loaded';
                    }
                });
            }

            function showError() {
                document.getElementById('secrets-status').innerHTML = 
                    '<span class="status-indicator status-error"></span>Failed to load secret status';
            }

            window.onload = loadEnvironmentData;
            setInterval(loadEnvironmentData, 10000);
        </script>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>üîê Production Application</h1>
                <p>Demonstrating Sealed Secrets Integration with GitOps</p>
                <div class="security-badge">üõ°Ô∏è Sealed Secrets Enabled</div>
                <div class="security-badge">üîí GitOps Secure</div>
            </div>
            
            <div class="demo-warning">
                <h4>‚ö†Ô∏è Demo Warning</h4>
                <p>This application displays decrypted secret values for demonstration purposes. In a real production environment, secrets should never be exposed in web interfaces!</p>
            </div>
            
            <div class="info-grid">
                <div class="info-card">
                    <h3>üîë Sealed Secrets Status</h3>
                    <div class="secret-item">
                        <strong>Controller Status:</strong><br>
                        <span id="secrets-status">Loading...</span>
                    </div>
                    <div class="secret-item">
                        <strong>Encryption:</strong> RSA-2048<br>
                        <strong>Namespace Scoped:</strong> Yes<br>
                        <strong>Auto-rotation:</strong> 30 days
                    </div>
                </div>
                
                <div class="info-card">
                    <h3>üóÑÔ∏è Database Configuration</h3>
                    <div class="secret-item">
                        <strong>Host:</strong> <span id="db-host" class="secret-value">Loading...</span><br>
                        <strong>Port:</strong> <span id="db-port" class="secret-value">Loading...</span><br>
                        <strong>Database:</strong> <span id="db-name" class="secret-value">Loading...</span><br>
                        <strong>Username:</strong> <span id="db-username" class="secret-value">Loading...</span><br>
                        <strong>Password:</strong> <span id="db-password" class="secret-value">Loading...</span><br>
                        <strong>Status:</strong> <span id="db-status">Checking...</span>
                    </div>
                </div>
                
                <div class="info-card">
                    <h3>üîó API Integrations</h3>
                    <div class="secret-item">
                        <strong>Stripe API:</strong><br><span id="stripe-key" class="secret-value">Loading...</span><br>
                        <strong>GitHub Token:</strong><br><span id="github-token" class="secret-value">Loading...</span><br>
                        <strong>SendGrid:</strong><br><span id="sendgrid-key" class="secret-value">Loading...</span><br>
                        <strong>JWT Secret:</strong><br><span id="jwt-secret" class="secret-value">Loading...</span><br>
                        <strong>Status:</strong> <span id="api-status">Validating...</span>
                    </div>
                </div>
                
                <div class="info-card">
                    <h3>üõ†Ô∏è GitOps Security Features</h3>
                    <div class="secret-item">
                        ‚úÖ Secrets encrypted at rest in Git<br>
                        ‚úÖ Public key encryption (RSA)<br>
                        ‚úÖ Namespace-scoped decryption<br>
                        ‚úÖ Automatic secret rotation<br>
                        ‚úÖ ArgoCD integration<br>
                        ‚úÖ Audit trail maintained
                    </div>
                </div>
            </div>
            
            <div class="endpoints">
                <h3>üîó Application Endpoints</h3>
                <a href="/health">Health Check</a>
                <a href="/ready">Ready Check</a>
                <a href="/metrics">Metrics</a>
                <a href="/api/env">Environment API</a>
            </div>
            
            <div style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid rgba(255,255,255,0.2);">
                <p><strong>üîê Sealed Secrets Benefits:</strong></p>
                <p>‚Ä¢ Store encrypted secrets safely in Git ‚Ä¢ Maintain GitOps principles ‚Ä¢ Automatic decryption in cluster ‚Ä¢ Key rotation support</p>
                <p><small>Last updated: <span id="timestamp"></span> | Environment: Production | Security: High</small></p>
            </div>
        </div>
    </body>
    </html>`;
        
        res.send(htmlContent);
    });

    app.listen(port, '0.0.0.0', () => {
        console.log('Sealed Secrets Demo app listening at http://0.0.0.0:' + port);
        console.log('Environment variables loaded:');
        console.log('- DB_HOST:', process.env.DB_HOST || 'NOT SET');
        console.log('- DB_USERNAME:', process.env.DB_USERNAME || 'NOT SET');
        console.log('- STRIPE_API_KEY:', process.env.STRIPE_API_KEY ? 'SET' : 'NOT SET');
        console.log('- GITHUB_TOKEN:', process.env.GITHUB_TOKEN ? 'SET' : 'NOT SET');
        console.log('- JWT_SECRET:', process.env.JWT_SECRET ? 'SET' : 'NOT SET');
    });
  package.json: |
    {
      "name": "sealed-secrets-demo",
      "version": "1.0.0",
      "description": "Demo application showing Sealed Secrets integration",
      "main": "app.js",
      "scripts": {
        "start": "node app.js"
      },
      "dependencies": {
        "express": "^4.18.2"
      }
    }
  health: "OK"
  ready: "READY"