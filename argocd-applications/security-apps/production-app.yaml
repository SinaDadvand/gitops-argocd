# ArgoCD Application for Production App with Sealed Secrets
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: production-app-sealed-secrets
  namespace: argocd
  labels:
    app.kubernetes.io/name: production-app
    environment: production
    security-level: high
    secrets-type: sealed
spec:
  project: default
  
  source:
    repoURL: https://github.com/SinaDadvand/k8s-helm.git
    targetRevision: HEAD
    path: gitops-apps/production-app
  
  destination:
    server: https://kubernetes.default.svc
    namespace: production-app
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    
    # Sync waves for secrets first
    syncOptions:
    - SyncWave=0  # Secrets first
    
    retry:
      limit: 5
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 5m
  
  # Health check for sealed secrets
  health:
    - group: bitnami.com
      kind: SealedSecret
      check: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            for i, condition in ipairs(obj.status.conditions) do
              if condition.type == "Synced" and condition.status == "True" then
                hs.status = "Healthy"
                hs.message = "SealedSecret is synced"
                return hs
              end
            end
          end
          hs.status = "Progressing"
          hs.message = "SealedSecret is being processed"
        else
          hs.status = "Progressing"
          hs.message = "SealedSecret status not available"
        end
        return hs